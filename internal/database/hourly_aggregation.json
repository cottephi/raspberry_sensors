[{"apiVersion":"influxdata.com/v2alpha1","kind":"Task","metadata":{"name":"fasting-gauss-06c001"},"spec":{"cron":"0 * * * *","name":"Hourly aggregation","query":"import \"date\"\n\n\n\nstartOfToday = today()\nstartOfTomorrow = date.add(d: 1d, to: today())\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"temperature_celsius\")\n    |> mean()\n    |> map(fn: (r) => ({r with _field: \"temperature_celsius_mean\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"temperature_celsius\")\n    |> median()\n    |> map(fn: (r) => ({r with _field: \"temperature_celsius_median\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"temperature_celsius\")\n    |> spread()\n    |> map(fn: (r) => ({r with _field: \"temperature_celsius_stddev\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"pressure_hpa\")\n    |> mean()\n    |> map(fn: (r) => ({r with _field: \"pressure_hpa_mean\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"pressure_hpa\")\n    |> median()\n    |> map(fn: (r) => ({r with _field: \"pressure_hpa_median\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"pressure_hpa\")\n    |> spread()\n    |> map(fn: (r) => ({r with _field: \"pressure_hpa_stddev\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"humidity_percent\")\n    |> mean()\n    |> map(fn: (r) => ({r with _field: \"humidity_percent_mean\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"humidity_percent\")\n    |> median()\n    |> map(fn: (r) => ({r with _field: \"humidity_percent_median\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")\n\nfrom(bucket: \"seconds\")\n    |> range(start: startOfToday)\n    |> filter(fn: (r) => r._measurement == \"environment_bme280\")\n    |> filter(fn: (r) => r._field == \"humidity_percent\")\n    |> spread()\n    |> map(fn: (r) => ({r with _field: \"humidity_percent_stddev\", _time: startOfTomorrow}))\n    |> to(bucket: \"daily\")"}}]